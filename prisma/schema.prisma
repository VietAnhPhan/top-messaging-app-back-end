// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  name       String
  username   String       @unique
  email      String       @unique
  password   String
  isAdmin    Boolean      @default(false)
  about      String?
  phone      String?      @unique
  created_at DateTime     @default(now())
  isActive   Boolean      @default(true)
  messages   Message[]
  ChatMember ChatMember[]
  avatarPath String?
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Conversation {
  id         Int          @id @default(autoincrement())
  userIds    Int[]
  createdAt  DateTime     @default(now())
  isActive   Boolean      @default(true)
  messages   Message[]
  ChatMember ChatMember[]
}

model Message {
  id             Int          @id @default(autoincrement())
  message        String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  createdAt      DateTime     @default(now())
  isActive       Boolean      @default(true)
  Media          Media[]
}

model ChatMember {
  id             Int          @id @default(autoincrement())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  createdAt      DateTime     @default(now())
  isActive       Boolean      @default(true)

  @@unique([conversationId, userId])
}

model Media {
  id        Int       @id @default(autoincrement())
  message   Message   @relation(fields: [messageId], references: [id])
  messageId Int
  filePath  String
  type      MediaType
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
}

enum MediaType {
  image
  video
  audio
}
